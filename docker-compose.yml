services:
  server:
    build: .
    command: >
      sh -c "
      echo 'Waiting for PostgreSQL...' &&
      until pg_isready -h postgres -p 5432 -q; do
        echo 'Waiting for PostgreSQL...';
        sleep 5;
      done &&
      echo 'PostgreSQL is ready!' &&
      alembic upgrade head &&
      uvicorn app.run:app --host 0.0.0.0 --port 8000 --reload
      "
    env_file:
      - ./.env
    restart: always
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - network
    ports:
      - "8000:8000"
    volumes:
      - ./:/tinder/

  celery_worker:
    build: .
    command: celery -A core.celery_app.celery worker --loglevel=info
    env_file:
      - ./.env
    volumes:
      - ./:/tinder/
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - network

  celery_beat:
    build: .
    command: celery -A core.celery_app.celery beat --loglevel=info
    env_file:
      - ./.env
    volumes:
      - ./:/tinder/
    depends_on:
      - postgres
      - redis
      - kafka
      - celery_worker
    networks:
      - network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_tinder
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_tinder
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - network

  postgres:
    image: postgis/postgis:latest
    container_name: postgres_container_tinder
    restart: always
    ports:
      - "5401:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "Egor100209"
      POSTGRES_DB: tinder
    networks:
      - network
    volumes:
      - postgres_volume:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis_container_tinder
    command: redis-server /etc/redis/redis.conf
    restart: always
    ports:
      - "6379:6379"
    networks:
      - network
    volumes:
      - redis_data:/data
      - ./redis.conf:/etc/redis/redis.conf

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5501:80"
    networks:
      - network
    environment:
      PGADMIN_DEFAULT_EMAIL: "example@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "123456"
    container_name: pgadmin_container_tinder
    volumes:
      - pgadmin_volume:/var/lib/pgadmin/

networks:
  network:
    driver: bridge

volumes:
  postgres_volume:
  pgadmin_volume:
  redis_data: